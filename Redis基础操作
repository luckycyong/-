Redis五种数据结构：String,List,Hash,Set,Sort Set
Redis数据持久化操作：RDB(文件快照）， AOF（文件追加）
String操作：
	设置指定key的值：set key value
	获取指定key的值：get key
	返回key中字符串值的子字符：getrange key start end
	将给定key的值设为value，并返回key的旧值：getset key value
	获取（一个或多个）给定key的值：mget key1 [key2...]
	对key所存储的字符串值，设置或清除指定偏移量上的位（bit）：setbit key offset value
	将值value关联到key，并将key的过期时间设置为second（以秒为单位）：setex key second value
	只有key不存在时设置key的值：setnx key value
	用value参数覆写给定key所存储的字符串值，从偏移量offset开始：setrange key offset value
	返回key所存储的字符串值的长度：strlen key
	同时设置一个或多个key-value键值对：mset key value [key value...]
	将值value关联到key，并将key的过期时间设置为second（以毫秒为单位）：psetex key millisecond value
	将key中存储的数字值增一：incr key
	将key所存储的值加上给定的增量值（increment）：incrby key increment
	将key所存储的值加上给定的浮点增量值（increment）：incrbyfloat key increment
	将key中存储的数字值减一：decr key
	将key所存储的值减去给定的减量值：decrby key decrement
	如果key已存在并且是一个字符串，append命令将指定value追加到该key原来值（value）的末尾：append key value
Hash操作：
	删除一个或多个哈希表字段：hdel key field1 [field2...]
	查看哈希表key中，指定的字段是否存在：hexists key field
	获取存储在哈希表中指定字段的值：hget key field
	获取在哈希表中指定key的所有字段和值：hgetall key
	为哈希表key中的指定字段的整数值加上增量increment：hincrby key field increment
	为哈希表key中的指定字段的浮点数值加上增量increment：hincrbyfloat key field increment
	获取哈希表中所有的字段：hkeys key
	获取哈希表中字段的数量：hlen key
	获取哈希表中所有给定字段的值：hmget key field1 [field2]
	同时将多个field-value键值对设置到哈希表key中：hmset key field1 value1 [field2 value2...]
	将哈希表key中的字段field的值设置为value：hset key field value
	只有在字段field不存在时，设置哈希表字段的值：hsetnx key field value
	获取哈希表中所有的值：hvals key
	迭代哈希表中的键值对：hscan key cursor [MATCH pattern] [COUNT count]
List操作：
	移出并获取列表的第一个元素，如果列表没有元素会阻塞列表直到等到超时或发现可弹出元素为止：blpop key1 [key2...] timeout
	移出并获取列表的最后一个元素，如果列表没有元素会阻塞列表直到等到超时或发现可弹出元素为止：brpop key1 [key2...] timeout
	通过索引获取列表中的元素：lindex key index
	在列表的元素前或者后插入元素：linsert key before|after pivot value
	获取列表长度：llen key
	移出并获取列表的第一个元素：lpop key
	将一个或多个值插入到列表头部：lpush key value1 [value2...]
	将一个值插入到已存在的列表头部：lpushx key value
	获取列表指定范围内的元素：lrange key start stop
	移除列表元素：lrem key count value
	通过索引设置列表元素的值：lset key index value
	对一个列表进行修剪（trim），就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将删除：ltrim key star stop
	移除列表最后一个元素，返回值为移除的元素：rpop key
	移除列表的最后一个元素，并将该元素添加到另一个列表并返回：rpoplpush source destination
	为已存在的列表添加值：rpushx key value
Set操作：
	向集合添加一个或多个成员：sadd key member1 [member2...]
	获取集合的成员数：scard key
	返回第一个集合与其他集合之间的差异：sdiff key1 [key2...]
	返回给定所有集合的差集并存储在destination中：sdiffstore destination key1 [key2...]
	返回给定所有集合的交集：sinter key1 [key2...]
	返回给定所有集合的交集并存储在destination中：sinterstore destination key1 [key2...]
	判断member元素是否为集合key的成员：sismember key member
	返回集合中的所有成员：smembers key
	将member元素从source集合移动到destination集合：smove source destination member
	移除并返回集合中的一个随机元素：spop key
	返回集合中一个或多个随机数：srandmember key [count]
	移除集合中一个或多个成员：srem key member1 [member2...]
	返回所有给定集合的并集：sunion key1 [key2...]
	返回所有给定集合的并集存储在destination中：sunionstore destination key1 [key2...]
	迭代集合中的元素：sscan key cursor [MATCH pattern] [Count count]
Sort Set操作：
	向有序集合添加一个或多个成员，或者更新已存在成员的值：zadd key score1 member1 [score2 member2...]
	获取有序集合的成员数：zcard key
	计算在有序集合中指定分数区间之间的成员数：zcount key min max
	有序集合中对指定成员的值加上增量increment：zincrby key increment member
	将给定的一个或多个有序集合的交集存储在新的有序集合destinations的key中：zinterstore destination numkeys key1 [key2...]
	计算有序集合中指定字典区间内成员数：zlexcount key min max
	通过索引区间返回有序集合指定区间内的成员：zrange key start stop [WITHSCORE]
	通过字典区间返回有序集合的成员：zrangebylex key min max
	通过分数区间返回有序集合的成员：zrangebyscore key min max
	返回有序集合中指定成员的索引：zrank key member
	移除有序集合的一个或多个成员：zrem key member1 [member2...]
	移除有序集合中给定的字典区间的成员：zremrangebylex key min max
	移除有序集合中给定的排名区间的成员：zremrangebyrank key start stop
	移除有序集合中给定的分数区间的成员：zremrangebyscore key min max
	返回有序集合中指定区间内的成员，通过索引，分数从高到低：zrevrange key start stop [WITHSCORE]
	返回有序集合中指定分数区间内的成员，分数从高到低排序：zrevrangebyscore key max min
	返回有序集合中指定成员的排名，有序集成员按分数值递减：zrevrank key member
	返回有序集合中，成员的分数值：zscore key member
	计算给定的一个或多个有序集合的并集，存储在新的key中：zunionstore destination numkeys key1 [key2...]
	迭代有序集合中的元素（包括元素成员和元素分值）：zscan key cursor [MATCH pattern] [COUNT count]
